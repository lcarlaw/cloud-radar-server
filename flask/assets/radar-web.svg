<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   version="1.1"
   id="svg1"
   width="537.98199"
   height="466.7467"
   viewBox="0 0 537.98199 466.7467"
   sodipodi:docname="hook-new.svg"
   inkscape:version="1.3 (0e150ed6c4, 2023-07-21)"
   xml:space="preserve"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><sodipodi:namedview
     id="namedview1"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="false"
     inkscape:deskcolor="#191919"
     showguides="true"
     inkscape:zoom="1.2006084"
     inkscape:cx="373.14415"
     inkscape:cy="386.88718"
     inkscape:window-width="1920"
     inkscape:window-height="1009"
     inkscape:window-x="-8"
     inkscape:window-y="-8"
     inkscape:window-maximized="1"
     inkscape:current-layer="g8"
     showgrid="false"
     inkscape:export-bgcolor="#ffffff00" /><defs
     id="defs1"><linearGradient
       id="linearGradient7"
       inkscape:collect="always"><stop
         style="stop-color:#000000;stop-opacity:0;"
         offset="0"
         id="stop7" /><stop
         style="stop-color:#000000;stop-opacity:0.14974619;"
         offset="0.17880946"
         id="stop10" /><stop
         style="stop-color:#000000;stop-opacity:1;"
         offset="1"
         id="stop8" /></linearGradient><radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient7"
       id="radialGradient8"
       cx="925.50183"
       cy="445.36703"
       fx="925.50183"
       fy="445.36703"
       r="169.48724"
       gradientTransform="matrix(1.7850138,-0.27061415,0.48265119,3.1836441,-1374.0774,-590.21683)"
       gradientUnits="userSpaceOnUse" /></defs><g
     inkscape:groupmode="layer"
     id="g8"
     inkscape:label="supercell and bass"
     style="display:inline"
     transform="translate(-429.57416,-169.96729)"><g
       id="g2"
       style="display:inline"><path
         id="path5-0"
         style="display:inline;fill:#06db42;fill-rule:evenodd;stroke:none;stroke-width:1.25;stroke-opacity:1;stop-color:#000000"
         inkscape:label="green"
         d="m 720.54606,179.52583 c -43.28639,9.2313 -76.47694,19.99575 -108.56303,41.7588 -52.61112,35.68614 -95.17816,86.5119 -129.42846,140.06073 -20.29956,31.73747 -34.68598,80.49698 -43.18507,104.44029 -8.29787,23.37635 -12.89723,40.39936 -7.40333,51.0378 1.99412,3.96884 8.43516,9.10007 10.55752,16.66009 -5.83298,10.47182 -13.00244,40.63744 -12.3818,63.3829 0.32957,12.07847 5.00984,23.55346 13.66147,30.64151 10.22169,8.37435 19.58118,10.26575 38.6789,8.70999 19.09772,-1.55576 40.38678,-21.75319 40.67581,-43.90801 0.13799,-10.57692 -5.82837,-16.99334 -11.85627,-23.27717 -4.23236,-4.41205 -13.19968,-7.74905 -15.98352,-8.9966 9.31386,-7.17473 35.39888,-15.22071 42.66556,-16.62038 37.00189,-7.12717 93.73224,-5.65651 138.55143,18.95419 21.98994,12.07488 39.87425,33.79787 64.43835,37.02396 22.38765,2.94028 46.34051,-1.7396 65.45884,-17.43355 57.73246,-47.39287 18.27861,-57.78275 64.80338,-123.92816 16.80557,-23.89294 48.33647,-34.70985 65.20529,-58.55831 15.3832,-21.74825 28.6445,-47.27673 30.5419,-73.84446 2.70368,-37.85883 -3.75021,-81.23984 -28.12701,-110.33661 -22.11939,-26.40231 -66.39431,-37.32567 -94.1171,-42.68566 -27.72278,-5.35999 -80.9066,-2.31264 -124.19286,6.91865 z"
         sodipodi:nodetypes="zaasscsszsacssasaaaasz"
         inkscape:transform-center-x="-200.01242"
         inkscape:transform-center-y="-194.4853" /><path
         style="display:none;fill:url(#radialGradient8);fill-opacity:1;stroke:none;stroke-width:2.479;stroke-dasharray:none;stroke-opacity:1"
         d="m 451.81376,744.96379 c -9.47686,12.01606 -20.90453,19.94146 -33.70193,23.3731 -15.03694,4.03221 -29.75606,2.61673 -46.44276,-4.46634 -6.1079,-2.59263 -19.73383,-10.75181 -29.30149,-16.63405 -7.77716,-4.78143 -15.84366,-9.25717 -22.81655,-15.14996 -15.2174,-12.86023 -32.83133,-25.36866 -40.90211,-43.5845 -6.6768,-15.06959 -8.53585,-32.56964 -3.97536,-49.28737 2.20153,-8.07022 4.43908,-12.94216 9.38167,-20.4273 8.95499,-13.56159 17.18561,-20.20912 53.55728,-43.25584 14.52678,-9.20482 22.02768,-16.3573 30.16193,-28.7608 5.86876,-8.94905 9.91415,-18.40018 13.88651,-32.44277 9.07769,-32.09041 12.39483,-40.23089 22.9066,-56.21449 6.73584,-10.2415 9.16906,-13.15512 16.20507,-19.40103 16.35933,-14.52223 28.14448,-11.01541 31.49497,-9.60301 4.69845,1.98064 6.24451,8.81536 6.00396,11.33494 -0.72564,7.60042 -2.45825,11.68742 -7.69359,21.57416 -6.74939,12.74598 -8.93693,22.11395 -7.03418,30.12329 1.0997,4.62886 2.54263,6.81532 5.9857,9.06957 3.18695,2.087 7.99004,2.65379 10.57409,1.24848 0.63972,-0.3479 2.90097,-3.48696 6.93813,-9.63157 6.90918,-10.51589 38.74055,-57.25075 52.94904,-77.74037 2.85672,-4.11953 12.99336,-18.99901 22.52606,-33.06565 19.78358,-29.19319 28.80917,-42.42575 35.69595,-52.33396 2.6521,-3.8153 10.18429,-14.90147 16.73819,-24.63558 6.55403,-9.7341 13.96387,-20.66093 16.46625,-24.28199 2.50214,-3.62076 10.09226,-14.78803 16.86697,-24.81593 6.7747,-10.02798 13.54405,-19.81603 15.04322,-21.75133 2.23696,-2.88728 2.88672,-4.01833 3.62105,-6.30434 1.42006,-4.42112 0.44076,-7.39773 -4.23908,-12.96232 -2.64111,-3.13673 -3.53766,-5.35854 -3.24313,-8.03777 0.31704,-2.88131 1.52753,-4.94069 5.28694,-8.99513 2.63707,-2.8438 3.28584,-3.72722 2.97979,-4.05737 -0.73286,-0.7911 -3.67276,-0.78968 -7.16584,0.003 -3.87258,0.87924 -5.77519,0.44252 -7.49065,-1.71922 -1.69022,-2.13042 -1.73782,-6.0267 -0.10288,-8.51443 0.3862,-0.58794 0.57631,-1.55504 0.422,-2.14903 -0.15688,-0.59334 -0.14927,-1.90625 0.008,-2.91612 0.23988,-1.50949 0.53816,-2.05492 1.6764,-3.06634 1.57039,-1.39546 4.16572,-2.09339 6.04881,-1.62659 0.76903,0.19057 1.92697,-0.0559 2.91959,-0.6214 2.43554,-1.38708 4.32622,-1.40542 6.35711,-0.0618 0.94279,0.61953 1.98626,1.61211 2.32328,2.19897 0.83444,1.45418 0.80253,4.14248 -0.0729,6.08765 -0.49944,1.11082 -0.5752,2.39147 -0.24006,4.12367 0.26321,1.38199 0.62681,2.60706 0.80284,2.72343 0.39223,0.25746 3.05797,-2.22662 10.44866,-9.73658 5.7763,-5.87009 6.83809,-7.11015 6.33397,-7.39955 -1.03401,-0.59382 -4.85279,-0.43341 -6.90491,0.28959 -2.85871,1.00731 -5.83867,0.6128 -7.50635,-0.99383 -1.98462,-1.91185 -2.15991,-6.65431 -0.34778,-9.41234 0.27004,-0.41093 0.38347,-1.09857 0.25216,-1.52822 -0.1313,-0.42954 -0.10569,-1.71946 0.0593,-2.86673 0.51214,-3.58645 3.63388,-5.77495 7.45885,-5.22912 1.48028,0.21101 2.3908,0.014 3.47414,-0.7516 3.48907,-2.46573 8.64875,0.0424 9.0273,4.38823 0.0405,0.47977 -0.22087,2.25366 -0.58264,3.94253 -0.66882,3.11815 -0.32222,6.42119 0.70113,6.69319 0.33972,0.0907 3.32414,-2.66421 7.52596,-6.94694 9.98502,-10.1771 9.3965,-9.48615 8.55185,-10.0409 -1.035,-0.68016 -4.59314,-0.57611 -6.95582,0.20341 -2.78915,0.92023 -5.11604,0.90601 -6.55641,-0.0402 -1.6555,-1.08776 -2.09432,-2.05013 -2.3077,-5.05941 -0.13693,-1.92073 0.0571,-2.94568 0.75575,-4.00963 0.70225,-1.06916 0.89212,-2.09261 0.75273,-4.06211 -0.15672,-2.20597 -0.0131,-2.8333 0.88511,-3.86821 1.92857,-2.22275 3.91269,-3.09858 6.30792,-2.78432 1.54082,0.20206 2.61326,0.0194 3.53432,-0.60227 2.17003,-1.46472 4.35968,-1.60467 6.199,-0.39603 2.51197,1.65052 3.42839,3.38457 3.1021,5.87023 -0.15633,1.19191 -0.44324,2.40921 -0.6374,2.70488 -0.19429,0.29579 -0.33917,1.80056 -0.32105,3.34378 0.035,3.05472 0.93734,4.29499 2.21512,3.04395 0.97394,-0.95308 11.8906,-12.27829 14.04565,-14.57111 0.93482,-0.9945 1.67726,-1.9203 1.64957,-2.05707 -0.15034,-0.7451 -4.42733,-0.76778 -6.99499,-0.0369 -3.28896,0.93621 -5.50578,0.81467 -7.35942,-0.40313 -1.01851,-0.6692 -1.32962,-1.39745 -1.81241,-4.23914 -0.53088,-3.12732 -0.48517,-3.55885 0.52363,-4.87505 0.90029,-1.17545 1.03708,-1.72998 0.73577,-2.98309 -0.51201,-2.12936 -0.31564,-3.45784 0.68299,-4.61718 0.46856,-0.54378 1.04685,-1.26078 1.28564,-1.5934 0.63659,-0.88729 3.64591,-1.66712 5.61505,-1.45509 0.94231,0.10155 2.49999,-0.21934 3.46202,-0.71295 2.42711,-1.24569 4.27943,-1.25318 6.31536,-0.0254 2.71644,1.63792 3.3798,3.85109 2.39998,8.00627 -0.75437,3.19997 -0.56426,6.66841 0.40025,7.29078 0.23957,0.15731 1.63661,-0.71609 3.10201,-1.93718 8.22886,-6.85713 18.04809,-7.57063 26.60607,-1.93315 5.6795,3.74163 8.70188,8.35642 9.79954,14.96423 0.88911,5.35241 0.0695,9.41084 -2.93644,14.53754 -4.11147,7.01292 -8.29587,9.90896 -17.68175,12.23769 -7.22564,1.79288 -8.09251,2.41747 -11.36975,8.19184 -3.43443,6.05194 -4.44601,8.64238 -6.72492,17.22209 -2.01054,7.57014 -2.64951,9.75232 -4.44109,15.16409 -2.65856,8.03146 -11.7959,25.98425 -14.05772,27.62005 -0.70179,0.50764 -1.69018,0.65325 -2.83765,0.41784 -6.11543,-1.2544 -10.8061,-0.93751 -15.26681,1.03166 -4.98914,2.20244 -6.70825,3.93648 -12.40928,12.51734 -4.65233,7.00241 -26.56919,41.61024 -35.495,56.04806 -2.18621,3.5363 -7.77448,12.42901 -12.41856,19.76165 -4.64394,7.33267 -12.78816,20.29006 -18.09852,28.79429 -5.3101,8.50406 -16.36037,26.01427 -24.55617,38.91154 -13.92722,21.91661 -19.13861,30.18468 -32.47568,51.52472 -2.91593,4.66562 -11.22384,17.87483 -18.46159,29.35301 -7.23733,11.47726 -14.74574,23.41619 -16.68474,26.52977 -1.93902,3.11361 -8.99737,14.391 -15.68519,25.0609 -6.6878,10.66989 -14.21753,22.83417 -16.73267,27.03176 -4.24303,7.08119 -4.60627,7.83837 -5.03399,10.49269 -0.65329,4.0542 -0.38737,6.23288 1.07108,8.77752 1.14274,1.99362 1.58726,2.39955 4.38361,4.00304 3.48074,1.99593 8.48981,3.44569 12.26457,3.54978 2.76387,0.0757 7.59729,-1.3632 11.19281,-3.3332 3.25242,-1.78204 6.27666,-4.26297 11.22008,-9.20452 6.08533,-6.08304 9.31969,-7.71979 14.30556,-7.23947 2.92464,0.28175 7.16855,3.13066 8.67278,5.82192 1.7361,3.10611 2.32481,5.21903 2.46436,8.84442 0.17506,4.54563 -0.49471,8.79437 -2.20661,13.99786 -1.34993,4.10331 -1.73108,4.80204 -7.03076,12.88887 -4.80255,7.32819 -6.12254,9.08358 -9.23474,12.28057 -6.10681,6.27318 -9.44231,8.97408 -19.4515,15.75085 -12.97765,8.78658 -14.26681,9.92887 -18.56015,16.44583 -4.33149,6.57482 -4.40911,6.87584 -7.21472,27.96705 -2.54355,19.12112 -5.30452,33.64263 -8.76397,46.09488 -3.63405,13.08085 -8.98555,23.73483 -17.07227,33.9883 z"
         id="path4708"
         inkscape:label="bass"
         inkscape:transform-center-x="-21.901372"
         inkscape:transform-center-y="-140.23421"
         sodipodi:nodetypes="cssssassssscszasscsssscsssccccccsccccsscccccccccsssccscccccscccccssscsccscssccsccsccccccscscccscsssccsscsssssscsssssssssssscc" /><path
         id="path5"
         style="display:inline;fill:#dde909;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:1.25;stroke-dasharray:none;stroke-opacity:1;stop-color:#000000"
         d="m 714.03402,235.66507 c -35.52977,4.54397 -69.78647,8.35361 -99.99832,24.65911 -47.79099,25.79388 -87.31954,67.02073 -119.42444,110.82302 -22.72105,30.99943 -40.91957,80.46676 -49.34762,104.20996 -15.05891,42.42328 8.6887,44.98446 8.00295,58.92082 -15.64071,39.21554 -38.96125,97.36875 27.55238,96.93741 24.09717,-2.73628 41.76227,-21.41728 39.45619,-41.72524 -1.42045,-12.51203 -15.31273,-27.45474 -32.75644,-24.66345 4.22814,-12.42949 30.94969,-24.199 49.54179,-27.78014 32.37578,-6.23611 84.13519,-7.35806 119.69331,5.63915 59.12442,21.61115 82.00158,27.29947 121.94941,-5.49316 30.71847,-25.21647 25.40667,-66.05735 34.05638,-111.47508 8.64984,-45.41774 92.8812,-99.25842 47.80403,-156.17156 -28.17328,-35.57071 -87.31366,-41.45412 -146.52962,-33.88084 z"
         sodipodi:nodetypes="saasssccssszss"
         inkscape:label="yellow"
         inkscape:transform-center-x="-156.43068"
         inkscape:transform-center-y="-165.83676" /><path
         id="path6"
         style="display:inline;fill:#db7206;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:1.25;stroke-dasharray:none;stroke-opacity:1;stop-color:#000000"
         d="m 655.08852,287.41131 c -15.53029,2.03141 -31.31677,6.90592 -46.50728,15.55127 -48.94188,27.85565 -109.54949,102.90473 -127.31392,135.42797 -13.43625,24.5992 -18.63599,35.71674 -24.96475,51.30962 -7.81529,19.2554 6.1267,29.61045 4.55664,44.66862 -1.64547,15.78127 -17.32249,39.21616 -16.34737,53.88071 0.9751,14.66457 6.0538,19.38016 16.24395,27.19755 6.03824,3.59951 23.19626,8.16526 33.71274,3.98752 11.02731,-4.38068 22.28103,-8.31878 22.84438,-27.29945 0.22661,-7.63492 -4.59687,-16.20987 -11.25085,-19.96364 -7.22357,-4.07509 -19.22841,-3.65779 -24.87261,0.75061 -0.59408,-3.52565 2.60722,-14.51368 11.08224,-22.6924 11.03782,-10.65191 34.43751,-18.13596 50.62073,-20.34529 16.18322,-2.20932 51.23433,-4.76712 81.27074,-2.35475 30.03861,2.41214 57.20494,16.23549 83.51688,6.85964 21.61473,-7.70209 41.536,-24.58861 49.57614,-47.7479 7.94218,-22.87754 -9.36335,-45.53988 0.16872,-68.00238 9.53193,-22.46249 34.33629,-69.27773 7.43895,-97.78782 -18.90674,-20.04016 -63.18447,-39.53414 -109.77533,-33.43993 z"
         sodipodi:nodetypes="sssssssasacszzasssss"
         inkscape:label="orange"
         inkscape:transform-center-x="-112.18549"
         inkscape:transform-center-y="-144.13746" /><path
         id="path7"
         style="display:inline;fill:#e10045;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:1.25;stroke-dasharray:none;stroke-opacity:1;stop-color:#000000"
         d="m 541.99721,419.55149 c -34.31637,17.75491 -50.08035,61.67981 -62.69772,97.47108 -5.42351,14.38512 -23.0648,62.55539 -19.49504,74.76008 4.46342,15.25994 23.83131,24.15971 34.17317,21.85604 5.91759,-1.31815 12.49179,-6.01909 15.64126,-9.28161 2.96816,-3.0747 5.23603,-8.2741 4.53267,-13.14385 -0.70336,-4.86976 -3.07018,-10.56717 -7.0109,-13.9801 -3.80862,-3.29851 -9.3278,-5.28408 -14.34063,-4.77686 -5.80695,0.58751 -11.40045,4.84955 -15.16724,8.74914 -4.00972,-8.15512 1.00316,-24.24911 5.8494,-30.79425 13.69698,-18.4986 38.01243,-26.0177 60.40875,-29.30697 20.98235,-3.08162 59.26774,-0.72244 80.89778,-2.48269 14.567,-1.18546 22.94321,-6.30235 31.05182,-14.97639 17.98908,-19.24337 23.02897,-59.17077 5.48854,-78.82097 -26.50932,-29.69801 -83.97002,-23.56867 -119.33186,-5.27265 z"
         sodipodi:nodetypes="asssszaacssssaa"
         inkscape:label="red"
         inkscape:transform-center-x="-67.211622"
         inkscape:transform-center-y="-88.731943" /><ellipse
         style="font-variation-settings:normal;display:inline;fill:#ff16ff;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;stop-color:#000000"
         id="ellipse8"
         cx="427.19318"
         cy="639.51227"
         rx="7.388967"
         ry="7.3175836"
         inkscape:label="tds"
         inkscape:transform-center-x="1.9449876"
         inkscape:transform-center-y="-10.586028"
         transform="rotate(-6.4771427)" /></g></g><script
     id="mesh_polyfill"
     type="text/javascript">&#10;!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();&#10;</script></svg>
